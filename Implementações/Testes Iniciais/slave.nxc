//SLAVE
#define DELIMITADOR 45
#define VELOC 50
#define T 20
#define DIST 20
#define BT_CONN 1
#define OUTBOX 1
#define INBOX 5
mutex moveMutex;
int sensor;

sub BTCheck(int conn){
    if (!BluetoothStatus(conn)==NO_ERR){
    TextOut(5,LCD_LINE2,"Error");
    Wait(1000);
    Stop(true);
    }
}
task recebe_msg(){
     BTCheck(0); //checa a conexão com o master
     while(true){
                 string entrada;
                 ReceiveRemoteString(INBOX,true,entrada);
                 sensor = StrToNum(entrada);
                 Wait(T);
     }
}

task segue_linha(){
     while(true){

                 if(sensor<=DELIMITADOR){
                     Acquire(moveMutex);
                     OnFwd(OUT_AC,VELOC);
                     Release(moveMutex);
                 }else{
                     Acquire(moveMutex);
                     OnRev(OUT_C, VELOC-25);
                     Release(moveMutex);
                 }
                 Wait(T);
     }
}

/*task desvia_obst(){
     while(true){
                 if((SensorUS(IN_1) < DIST)||(SensorUS(IN_4) < DIST)){
                      Acquire(moveMutex);
                      OnFwd(OUT_AC,0);
                      while((SensorUS(IN_1) < DIST)||(SensorUS(IN_4) < DIST)){
                      OnFwd(OUT_AC,0);
                      Wait(2*T);
                      }
                      Release(moveMutex);
                 }
                 Wait(T);
     }
}*/

task main(){
     Precedes(segue_linha,recebe_msg);
}
