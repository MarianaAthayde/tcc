//MASTER 2
#define DELIMITADOR 45
#define VELOC 50
#define T 20
#define DIST 20
#define BT_CONN 1
#define OUTBOX 5
mutex moveMutex;

sub BTCheck(int conn){
    if (!BluetoothStatus(conn)==NO_ERR){
    TextOut(5,LCD_LINE2,"Error");
    Wait(1000);
    Stop(true);
    }
}
task envia_msg(){
     BTCheck(BT_CONN); //checa a conexão com o master
     while(true){
                 string out = NumToStr(Sensor(IN_3));
                 out = StrCat(out,"|",NumToStr(SensorUS(IN_1)),"|",NumToStr(SensorUS(IN_4)));
                 SendRemoteString(BT_CONN,OUTBOX,out);
                 Wait(T);
     }
}

task segue_linha(){
     while(true){

                 if(Sensor(IN_3)<=DELIMITADOR){
                     Acquire(moveMutex);
                     OnFwd(OUT_AC,VELOC);
                     Release(moveMutex);
                 }else{
                     Acquire(moveMutex);
                     OnRev(OUT_C, VELOC-25);
                     Release(moveMutex);
                 }
                 Wait(T);
     }
}

task desvia_obst(){
     while(true){
                 if((SensorUS(IN_1) < DIST)||(SensorUS(IN_4) < DIST)){
                      Acquire(moveMutex);
                      OnFwd(OUT_AC,0);
                      while((SensorUS(IN_1) < DIST)||(SensorUS(IN_4) < DIST)){
                      OnFwd(OUT_AC,0);
                      Wait(2*T);
                      }
                      Release(moveMutex);
                 }
                 Wait(T);
     }
}

task main(){
     SetSensorLight(IN_3,SENSOR_LIGHT);
     SetSensorLowspeed(IN_1);
     SetSensorLowspeed(IN_4);
     Precedes(segue_linha,desvia_obst,envia_msg);
}
